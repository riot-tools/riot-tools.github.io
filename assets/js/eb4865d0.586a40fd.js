"use strict";(self.webpackChunkriot_tools=self.webpackChunkriot_tools||[]).push([[895],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return d}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=u(r),d=a,f=m["".concat(l,".").concat(d)]||m[d]||p[d]||o;return r?n.createElement(f,i(i({ref:t},c),{},{components:r})):n.createElement(f,i({ref:t},c))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5554:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return c},default:function(){return m}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),i=["components"],s={id:"sak-getting-started",title:"Getting Started",sidebar_label:"Getting Started",slug:"/sak/getting-started"},l=void 0,u={unversionedId:"sak/sak-getting-started",id:"sak/sak-getting-started",isDocsHomePage:!1,title:"Getting Started",description:"Swiss Army Knife",source:"@site/docs/sak/getting-started.md",sourceDirName:"sak",slug:"/sak/getting-started",permalink:"/sak/getting-started",editUrl:"https://github.com/riot-tools/riot-tools.github.io/edit/master/meiosis/docs/sak/getting-started.md",version:"current",frontMatter:{id:"sak-getting-started",title:"Getting Started",sidebar_label:"Getting Started",slug:"/sak/getting-started"},sidebar:"sak",next:{title:"Observable",permalink:"/sak/observable"}},c=[{value:"Swiss Army Knife",id:"swiss-army-knife",children:[]}],p={toc:c};function m(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"swiss-army-knife"},"Swiss Army Knife"),(0,o.kt)("p",null,"This library holds miscellaneous tools to be used throughout your project. They are aimed at making build Riot apps a bit simpler."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm i --save @riot-tools/sak\n")),(0,o.kt)("p",null,"Features:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"observable"},"Observable:"),":")," Refactored and extend observable based off of ",(0,o.kt)("inlineCode",{parentName:"li"},"@riotjs/observable"),". Virtually the same API, but with a bit more feature."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"options-validator"},"Options Validator"),":")," A very simple schema validator for ensuring proper option are passed into your components."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"queryable"},"Queryable"),":")," Adds an opinionated async fetch lifecycle to your components to more easily manage fetching APIs, loaders, error capturing, etc."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"meta"},"Meta"),":")," Build Riot hooks that stack on top of other HOC functions that may also implement hooks, and more!")))}m.isMDXComponent=!0}}]);