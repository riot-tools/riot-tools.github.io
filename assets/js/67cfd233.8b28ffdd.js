"use strict";(self.webpackChunkriot_tools=self.webpackChunkriot_tools||[]).push([[788],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return y}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(t),y=a,m=d["".concat(c,".").concat(y)]||d[y]||p[y]||o;return t?r.createElement(m,i(i({ref:n},u),{},{components:t})):r.createElement(m,i({ref:n},u))}));function y(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},813:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),i=["components"],s={id:"meiosis-types",title:"Types",sidebar_label:"Types",slug:"/meiosis/types"},c=void 0,l={unversionedId:"meiosis/meiosis-types",id:"meiosis/meiosis-types",isDocsHomePage:!1,title:"Types",description:"Library",source:"@site/docs/meiosis/types.md",sourceDirName:"meiosis",slug:"/meiosis/types",permalink:"/meiosis/types",editUrl:"https://github.com/riot-tools/riot-tools.github.io/edit/master/meiosis/docs/meiosis/types.md",version:"current",frontMatter:{id:"meiosis-types",title:"Types",sidebar_label:"Types",slug:"/meiosis/types"},sidebar:"meiosis",previous:{title:"API",permalink:"/meiosis/api"}},u=[{value:"Library",id:"library",children:[]},{value:"Utils",id:"utils",children:[]}],p={toc:u};function d(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"library"},"Library"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"declare type AnyState = Object | Array<any> | String | Map<any, any> | Set<any>;\n\ndeclare class RiotMeiosis {\n    stream: StateManager;\n    connect: ConnectFunction;\n    dispatch: (value: any) => any;\n    constructor(initialState: AnyState, options?: StateManagerOptions);\n}\n\ndeclare type StateManagerOptions = {\n\n    /** How many states changes to keep in memory */\n    statesToKeep?: number;\n\n    /** Removes states after reading */\n    flushOnRead?: boolean;\n\n    /** Parent stream */\n    parent?: StateManager;\n\n    /** Child stream should update parent stream */\n    bidirectional?: boolean;\n};\n\ndeclare type StateManagerState = {\n    state?: any;\n    currentState?: number | null;\n    latestState?: number | null;\n    parentListener?: Function | null;\n    childListener?: Function | null;\n};\n\ndeclare type ReducerFunction = (value: any, state?: any, ignore?: symbol) => any;\n\ndeclare class StateManager {\n    _options: StateManagerOptions | null;\n    _internals: StateManagerState;\n    _states: Map<number, any> | null;\n    _reducers: Set<ReducerFunction> | null;\n    _listeners: Set<Function> | null;\n    _parent: StateManager | null;\n    constructor(initialState?: any, options?: StateManagerOptions);\n    dispatch(value: any, flow?: StateManager[]): this;\n    addReducer(...fns: ReducerFunction[]): this;\n    removeReducer(...fns: ReducerFunction[]): this;\n    addListener(...fns: Function[]): this;\n    removeListener(...fns: Function[]): this;\n    states(): any[];\n    state(): any;\n    flushStates(): void;\n    resetState(): void;\n    goToState(sid: number): void;\n    prevState(): void;\n    nextState(): void;\n    clone(options?: StateManagerOptions): StateManager;\n}\n\ninterface ConnectFunction {\n    (component: RiotComponentExport): RiotComponentExport;\n}\n\ndeclare const connectFactory: (stateStream: StateManager) => ConnectFunction;\n")),(0,o.kt)("h2",{id:"utils"},"Utils"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"\ndeclare const isFunctionOrObject: (a: Function | Object) => boolean;\n\ndeclare const isUndefined: (val: any) => boolean;\n\ndeclare const assertFunction: (msg: String, func: Function) => void;\n\ndeclare const definePrivateProperties: (target: object, props: object) => void;\n\ndeclare const definePrivateGetters: (target: object, props: object) => void;\n\ndeclare const deepFreeze: (target: object) => void;\n\ndeclare const generateId: () => string;\n")))}d.isMDXComponent=!0}}]);