"use strict";(self.webpackChunkriot_tools=self.webpackChunkriot_tools||[]).push([[989],{3905:function(t,e,n){n.d(e,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,r,o=function(t,e){if(null==t)return{};var n,r,o={},a=Object.keys(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var l=r.createContext({}),c=function(t){var e=r.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},p=function(t){var e=c(t.components);return r.createElement(l.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,o=t.mdxType,a=t.originalType,l=t.parentName,p=s(t,["components","mdxType","originalType","parentName"]),d=c(n),m=o,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(f,i(i({ref:e},p),{},{components:n})):r.createElement(f,i({ref:e},p))}));function m(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s.mdxType="string"==typeof t?t:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7621:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],s={id:"sak-options-validator",title:"Options Validator",sidebar_label:"Options Validator",slug:"/sak/options-validator"},l=void 0,c={unversionedId:"sak/sak-options-validator",id:"sak/sak-options-validator",isDocsHomePage:!1,title:"Options Validator",description:"TODO",source:"@site/docs/sak/options-validator.md",sourceDirName:"sak",slug:"/sak/options-validator",permalink:"/sak/options-validator",editUrl:"https://github.com/riot-tools/riot-tools.github.io/edit/master/meiosis/docs/sak/options-validator.md",version:"current",frontMatter:{id:"sak-options-validator",title:"Options Validator",sidebar_label:"Options Validator",slug:"/sak/options-validator"},sidebar:"sak",previous:{title:"Observable",permalink:"/sak/observable"},next:{title:"Queryable",permalink:"/sak/queryable"}},p=[{value:"TODO",id:"todo",children:[]},{value:"Option Validator",id:"option-validator",children:[]}],u={toc:p};function d(t){var e=t.components,n=(0,o.Z)(t,i);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"todo"},"TODO"),(0,a.kt)("h2",{id:"option-validator"},"Option Validator"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { OptionsValidator } from '@riot-tools/sak';\n\nconst schema = {\n    opt1: true, // required\n    opt2: String, // must be a string\n    opt3: Object ,// must be an object\n    opt4: (val) => val === 'test' || 'does not eq test', // return true or err message\n    opt5: [false, String], // Optional, but must be a string\n    opt6: [true, String], // required, and must be a string\n    opt7: {\n        a: String,\n        b: Boolean\n    }, // must be an object that matches nested schema\n    opt8: [true, {\n        a: String,\n        b: Boolean\n    }] // required and must be an object that matches nested schema\n};\n\nconst validator = new OptionsValidator(schema, 'my component');\n\nvalidator.validate(myOptionsObject);\n\n")))}d.isMDXComponent=!0}}]);