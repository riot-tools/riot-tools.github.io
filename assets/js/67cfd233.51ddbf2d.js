"use strict";(self.webpackChunkriot_tools=self.webpackChunkriot_tools||[]).push([[788],{813:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return r},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return u},default:function(){return p}});var a=t(7462),s=t(3366),i=(t(7294),t(3905)),o=["components"],r={id:"meiosis-types",title:"Types",sidebar_label:"Types",slug:"/meiosis/types"},c=void 0,l={unversionedId:"meiosis/meiosis-types",id:"meiosis/meiosis-types",isDocsHomePage:!1,title:"Types",description:"Library",source:"@site/docs/meiosis/types.md",sourceDirName:"meiosis",slug:"/meiosis/types",permalink:"/meiosis/types",editUrl:"https://github.com/riot-tools/riot-tools.github.io/edit/master/meiosis/docs/meiosis/types.md",version:"current",frontMatter:{id:"meiosis-types",title:"Types",sidebar_label:"Types",slug:"/meiosis/types"},sidebar:"meiosis",previous:{title:"API",permalink:"/meiosis/api"}},u=[{value:"Library",id:"library",children:[]},{value:"Utils",id:"utils",children:[]}],d={toc:u};function p(e){var n=e.components,t=(0,s.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"library"},"Library"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"declare type AnyState = Object | Array<any> | String | Map<any, any> | Set<any>;\n\ndeclare class RiotMeiosis {\n    stream: StateManager;\n    connect: ConnectFunction;\n    dispatch: (value: any) => any;\n    constructor(initialState: AnyState, options?: StateManagerOptions);\n}\n\ndeclare type StateManagerOptions = {\n\n    /** How many states changes to keep in memory */\n    statesToKeep?: number;\n\n    /** Removes states after reading */\n    flushOnRead?: boolean;\n\n    /** Parent stream */\n    parent?: StateManager;\n\n    /** Child stream should update parent stream */\n    bidirectional?: boolean;\n};\n\ndeclare type StateManagerState = {\n    state?: any;\n    currentState?: number | null;\n    latestState?: number | null;\n    parentListener?: Function | null;\n    childListener?: Function | null;\n};\n\ndeclare type ReducerFunction = (value: any, state?: any, ignore?: symbol) => any;\n\ndeclare class StateManager {\n    _options: StateManagerOptions | null;\n    _internals: StateManagerState;\n    _states: Map<number, any> | null;\n    _reducers: Set<ReducerFunction> | null;\n    _listeners: Set<Function> | null;\n    _parent: StateManager | null;\n    constructor(initialState?: any, options?: StateManagerOptions);\n    dispatch(value: any, flow?: StateManager[]): this;\n    addReducer(...fns: ReducerFunction[]): this;\n    removeReducer(...fns: ReducerFunction[]): this;\n    addListener(...fns: Function[]): this;\n    removeListener(...fns: Function[]): this;\n    states(): any[];\n    state(): any;\n    flushStates(): void;\n    resetState(): void;\n    goToState(sid: number): void;\n    prevState(): void;\n    nextState(): void;\n    clone(options?: StateManagerOptions): StateManager;\n}\n\ninterface ConnectFunction {\n    (component: RiotComponentExport): RiotComponentExport;\n}\n\ndeclare const connectFactory: (stateStream: StateManager) => ConnectFunction;\n")),(0,i.kt)("h2",{id:"utils"},"Utils"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"\ndeclare const isFunctionOrObject: (a: Function | Object) => boolean;\n\ndeclare const isUndefined: (val: any) => boolean;\n\ndeclare const assertFunction: (msg: String, func: Function) => void;\n\ndeclare const definePrivateProperties: (target: object, props: object) => void;\n\ndeclare const definePrivateGetters: (target: object, props: object) => void;\n\ndeclare const deepFreeze: (target: object) => void;\n\ndeclare const generateId: () => string;\n")))}p.isMDXComponent=!0}}]);